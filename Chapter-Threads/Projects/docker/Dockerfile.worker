# Multi-stage build for optimized worker container
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    libopencv-dev \
    python3-opencv \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements_extended.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements_extended.txt

# Production stage
FROM base as production

# Copy application code
COPY . .

# Create non-root user for security
RUN groupadd -r worker && useradd -r -g worker worker
RUN chown -R worker:worker /app
USER worker

# Environment variables
ENV PYTHONPATH=/app
ENV WORKER_TYPE=distributed
ENV REDIS_HOST=redis
ENV REDIS_PORT=6379

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import redis; redis.Redis(host='$REDIS_HOST', port=$REDIS_PORT).ping()" || exit 1

# Default command
CMD ["python", "workers/distributed_worker.py"]