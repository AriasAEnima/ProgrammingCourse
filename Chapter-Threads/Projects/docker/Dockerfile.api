# Multi-stage build for Django API container
FROM python:3.11-slim as base

# Install system dependencies for image processing
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    libopencv-dev \
    python3-opencv \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements_extended.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements_extended.txt

# Production stage
FROM base as production

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p static/processed static/images logs

# Create non-root user for security
RUN groupadd -r django && useradd -r -g django django
RUN chown -R django:django /app
USER django

# Environment variables
ENV PYTHONPATH=/app
ENV DJANGO_SETTINGS_MODULE=django_image_server.settings
ENV REDIS_HOST=redis
ENV REDIS_PORT=6379

# Collect static files (if needed)
RUN python manage.py collectstatic --noinput --clear || true

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health/ || exit 1

# Expose port
EXPOSE 8000

# Default command
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]