pip install django

python -m django startproject my_first_ci_project

python manage.py startapp api

python manage.py runserver

python manage.py test

PR => test
On push => deploy

# Clase 2 

https://www.mongodb.com/try/download/community

pip install mongoengine

pip install djangorestframework

pip install coverage

pip install django

pip install pytest-cov

coverage run manage.py test

coverage report

# Clase 3

python -m venv django_project_env

django_project_env\Scripts\activate   

# Unix
. django_project_env/bin/activate

(cada vez que se agregue una lib)
pip install django djangorestframework mongoengine pymongo coverage pytest pytest-cov mongomock python-dotenv
pip freeze > requirements.txt

pip install python-dotenv

coverage run manage.py test

(cuando queramos instalar lo que ya hay)
pip install -r requirements.txt

# Clase 4

# Docker Commands

# Construir y levantar los servicios
docker-compose up --build

# Levantar en segundo plano
docker-compose up -d

# Ver logs
docker-compose logs -f

# Acceder al container de Django
docker-compose exec web bash

# Ejecutar comandos Django en el container
docker-compose exec web python manage.py migrate
docker-compose exec web python manage.py test
docker-compose exec web python manage.py createsuperuser

# Parar servicios
docker-compose down

# Parar y eliminar vol√∫menes
docker-compose down -v

# Servicios disponibles:
# - Django: http://localhost:8000
# - MongoDB: localhost:27017
# - Mongo Express (UI): http://localhost:8081