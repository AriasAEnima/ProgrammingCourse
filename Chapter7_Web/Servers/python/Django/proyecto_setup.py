# üöÄ Django - Configuraci√≥n Inicial del Proyecto
# Sesi√≥n 1.5 horas - Primera parte (45 minutos)

"""
DJANGO B√ÅSICO I - CONFIGURACI√ìN DEL PROYECTO

Tiempo estimado: 45 minutos
- Creaci√≥n del proyecto (15 min)
- Configuraci√≥n inicial (15 min)  
- Primer servidor de desarrollo (15 min)
"""

# ============================================================================
# 1. INSTALACI√ìN Y CONFIGURACI√ìN INICIAL (15 minutos)
# ============================================================================

# Paso 1: Crear entorno virtual
# python -m venv django_env

# Paso 2: Activar entorno virtual
# Windows: django_env\Scripts\activate
# Mac/Linux: source django_env/bin/activate

# Paso 3: Instalar Django
# pip install django

# Paso 4: Verificar instalaci√≥n
# django-admin --version

# ============================================================================
# 2. CREAR PROYECTO DJANGO (15 minutos)
# ============================================================================

# Paso 1: Crear proyecto
# django-admin startproject mi_proyecto

# Paso 2: Navegar al proyecto
# cd mi_proyecto

# Paso 3: Estructura del proyecto generado
"""
mi_proyecto/
‚îú‚îÄ‚îÄ manage.py              # Herramienta de administraci√≥n
‚îú‚îÄ‚îÄ mi_proyecto/
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py       # Paquete Python
‚îÇ   ‚îú‚îÄ‚îÄ settings.py       # Configuraciones del proyecto
‚îÇ   ‚îú‚îÄ‚îÄ urls.py           # URLs principales
‚îÇ   ‚îú‚îÄ‚îÄ wsgi.py           # Configuraci√≥n WSGI
‚îÇ   ‚îî‚îÄ‚îÄ asgi.py           # Configuraci√≥n ASGI
"""

# ============================================================================
# 3. CONFIGURACI√ìN B√ÅSICA - settings.py (15 minutos)
# ============================================================================

# Configuraci√≥n de ejemplo para settings.py
CONFIGURACION_BASICA = {
    'DEBUG': True,  # Solo en desarrollo
    'ALLOWED_HOSTS': ['localhost', '127.0.0.1'],
    
    # Base de datos SQLite (por defecto)
    'DATABASES': {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'db.sqlite3',
        }
    },
    
    # Idioma y zona horaria
    'LANGUAGE_CODE': 'es-es',
    'TIME_ZONE': 'America/Mexico_City',
    'USE_I18N': True,
    'USE_TZ': True,
}

# ============================================================================
# 4. PRIMER SERVIDOR DE DESARROLLO
# ============================================================================

# Comando para ejecutar el servidor
# python manage.py runserver

# El servidor estar√° disponible en:
# http://127.0.0.1:8000/

# ============================================================================
# 5. CREAR PRIMERA APLICACI√ìN
# ============================================================================

# Comando para crear una aplicaci√≥n
# python manage.py startapp mi_app

# Estructura de la aplicaci√≥n generada
"""
mi_app/
‚îú‚îÄ‚îÄ __init__.py
‚îú‚îÄ‚îÄ admin.py              # Administraci√≥n
‚îú‚îÄ‚îÄ apps.py               # Configuraci√≥n de la app
‚îú‚îÄ‚îÄ migrations/           # Migraciones de BD
‚îú‚îÄ‚îÄ models.py             # Modelos de datos
‚îú‚îÄ‚îÄ tests.py              # Pruebas
‚îî‚îÄ‚îÄ views.py              # Vistas (l√≥gica)
"""

# ============================================================================
# 6. REGISTRAR LA APLICACI√ìN
# ============================================================================

# En settings.py, agregar a INSTALLED_APPS:
INSTALLED_APPS_EJEMPLO = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mi_app',  # ‚Üê Agregar nuestra aplicaci√≥n
]

# ============================================================================
# 7. COMANDOS √öTILES PARA RECORDAR
# ============================================================================

COMANDOS_DJANGO = {
    'crear_proyecto': 'django-admin startproject nombre_proyecto',
    'crear_app': 'python manage.py startapp nombre_app',
    'servidor': 'python manage.py runserver',
    'servidor_puerto': 'python manage.py runserver 8080',
    'migraciones': 'python manage.py makemigrations',
    'aplicar_migraciones': 'python manage.py migrate',
    'superusuario': 'python manage.py createsuperuser',
    'shell': 'python manage.py shell',
}

# ============================================================================
# üí° TIPS IMPORTANTES
# ============================================================================

"""
‚úÖ BUENAS PR√ÅCTICAS:
- Siempre usar entornos virtuales
- Mantener DEBUG=False en producci√≥n
- Usar nombres descriptivos para aplicaciones
- Documentar configuraciones especiales

‚ö†Ô∏è ERRORES COMUNES:
- Olvidar activar el entorno virtual
- No registrar la app en INSTALLED_APPS
- Ejecutar servidor sin hacer migraciones
- Usar DEBUG=True en producci√≥n

üîç VERIFICACI√ìN:
- El servidor corre sin errores
- Se puede acceder a http://127.0.0.1:8000/
- La aplicaci√≥n aparece en INSTALLED_APPS
- No hay mensajes de error en consola
"""

if __name__ == "__main__":
    print("üêç Django - Configuraci√≥n del Proyecto")
    print("=" * 50)
    print("üìã Checklist de configuraci√≥n:")
    print("‚ñ° Entorno virtual creado y activado")
    print("‚ñ° Django instalado")
    print("‚ñ° Proyecto creado")
    print("‚ñ° Aplicaci√≥n creada")
    print("‚ñ° App registrada en settings.py")
    print("‚ñ° Servidor ejecut√°ndose correctamente")
    print("\nüöÄ ¬°Listo para continuar con vistas y modelos!")


